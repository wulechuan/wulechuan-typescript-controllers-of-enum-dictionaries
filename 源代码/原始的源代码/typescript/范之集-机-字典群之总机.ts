/**
 * ═══════════════════════════════════════════════════════════════════════════════
 *           范之集： 【字典群之总机】
 * ═══════════════════════════════════════════════════════════════════════════════
 */

/** */

declare module '@wulechuan/controllers-of-enum-dictionaries' {
    /**
     * 在某【字典群之总机】（下称【总机】）中，
     * 若诸【字典】之数据结构高度相似甚至完全相同，
     * 不妨称这些【字典】为所谓【标准字典】。
     *
     * 相对的，可能某些【字典】之数据结构与众不同。
     * 不妨称这些【字典】为所谓【特异字典】。
     *
     * 由上述不难料想，本 npm 工具集允许单个【总机】内同时
     * 管理零个或任意多个【标准字典】、零个或任意多个【特异字典】。
     *
     * 又，倘若所谓【标准字典】有且仅有 1 个，同时还有其它所谓【特异字典】，
     * 那么，从实用角度来看，该所谓【标准字典】实则【特异字典】。
     *
     * 又，目前，在 JavaScript 层面（而非 TypeScript 层面）
     * 没有任何字段用以区别所谓【标准字典】和【特异字典】。
     * 二者完全由开发者内心界定。
     *
     * 又，倘若某【总机】中确实存在所谓【标准字典】，
     * 则这类【字典】的【条目原式】必定存在，且开发者应该明确给出。
     * 换言之，该【总机】的【范_所涉总机_内所有字典_条目原式_可能的默认形态】不会是 never ，
     * 且开发者在实际代码中理应给出该【范】。
     * 否则，该【总机】的【范_所涉总机_内所有字典_条目原式_可能的默认形态】应作 never 。
     *
     * 又，为遵从自然语言习惯，【范_所涉总机_内所有字典_条目原式_可能的默认形态】有时
     * 会改称【范_所涉总机_所涉所谓标准字典_条目原式】、【范_该总机_所涉所谓标准字典_条目原式（ TODO ）】等。
     */





    /**
     * 此为 `范_字典群之总机_成批重建字典数据之方案` 。
     *
     * 1.  `'仅限那些允许参与数据自动构建任务且尚未构建过数据的字典参与'`
     *
     *     即为 `该字典在默认情形下不参与字典群总机发起的数据重建任务` 取 `true` 的那些字典机。
     *     但，若某字典已经构建过数据，则不参与。
     *
     *     例如：由【字典群之总机】的 `追加一批字典` 行为新追加的那些【字典机】。
     *
     *     ------------------------------------------------------------
     *
     * 2.  `'所有允许参与数据自动构建任务的字典均参与，不论其是否已构建好数据'`
     *
     *     即为 `该字典在默认情形下不参与字典群总机发起的数据重建任务` 取 `true` 的那些【字典机】。
     *     哪怕它们曾经成功构建过数据。
     *
     *     ------------------------------------------------------------
     *
     * 3.  `'强制一切字典参与，不论其是否已构建好数据'`
     *
     *     即为该【字典群总机】内的一切【字典机】。
     *     换句话说，忽略【字典机】各自的 `该字典在默认情形下不参与字典群总机发起的数据重建任务` 之值。
     */
    export type 范_字典群之总机_成批重建字典数据之方案 = (
        | '仅限那些允许参与数据自动构建任务且尚未构建过数据的字典参与'
        | '所有允许参与数据自动构建任务的字典均参与，不论其是否已构建好数据'
        | '强制一切字典参与，不论其是否已构建好数据'
    );





    export type 范_诸字典机_其列表<
        范_所涉总机_This = 范_字典机系统_This之默认式,
        范_所涉总机_内所有字典_条目原式_可能的默认形态 = any,
        范_所涉总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>
    > = Array<
        范_字典机<
            范_所涉总机_This,
            范_所涉总机_内所有字典_条目原式_可能的默认形态,
            范_所涉总机_内所有字典_条目视式_各色形态之交集
        >
    >;



    export type 范_诸字典机_其哈希表<
        范_所涉总机_This = 范_字典机系统_This之默认式,
        范_所涉总机_内所有字典_条目原式_可能的默认形态 = any,
        范_所涉总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>
    > = Record<
        string,

        范_字典机<
            范_所涉总机_This,
            范_所涉总机_内所有字典_条目原式_可能的默认形态,
            范_所涉总机_内所有字典_条目视式_各色形态之交集
        >
    >;



    export type 范_字典群之总机_范之零件_诸事之应对_完备式<
        范_该总机_This = 范_字典机系统_This之默认式,
        范_该总机_内所有字典_条目原式_可能的默认形态 = any,
        范_该总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>,
    > = {

        /** 即便是在该【范】的所谓【完备式】中，该项亦可省略。 */
        内任何字典_某次数据重建后_统一做法?:
            范_某字典群_内任何所谓标准字典_某次数据重建后_统一做法<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >;

        /** 即便是在该【范】的所谓【完备式】中，该项亦可省略。 */
        内任何所谓标准字典_凭字典条目原式之集构建诸字典条目内容映射表_默认做法?:
            范_某字典群_内任何所谓标准字典_凭字典条目原式之集构建诸字典条目内容映射表_默认做法<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集['值']
            >;

        /** 即便是在该【范】的所谓【完备式】中，该项亦可省略。 */
        内任何所谓标准字典_凭某条目之原式构建其视式_默认做法?:
            范_某字典群_内任何所谓标准字典_凭某条目之原式构建其视式_默认做法<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >;
    };



    export type 范_字典群之总机_范之零件_诸事之应对_准用式<
        范_该总机_This = 范_字典机系统_This之默认式,
        范_该总机_内所有字典_条目原式_可能的默认形态 = any,
        范_该总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>
    > =
        /**
         * 尽管下方采用的【完备式】中的各项恰好全部为【可省略者】（带有英语问号），
         * 此处仍采用 Partial 运算。
         * 此系故意为之，以为明确。
         */
        Partial<
            范_字典群之总机_范之零件_诸事之应对_完备式<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >
        >;



    export type 范_字典群之总机_形制要求总集_准用式<
        范_该总机_This = 范_字典机系统_This之默认式,
        范_该总机_内所有字典_条目原式_可能的默认形态 = any,
        范_该总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>,
    > = {

        /**
         * 目前仅前缀于各类消息文本。
         */
        该字典群之称谓?: string;

        第一批字典机形制要求总集_其列表?: Array<
            范_字典机_形制要求总集_准用式<
                范_该总机_This,
                any,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >
        >;

        诸事之应对?:
            范_字典群之总机_范之零件_诸事之应对_准用式<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >;
    };





    export type 范_字典群之总机<
        范_该总机_This = 范_字典机系统_This之默认式,
        范_该总机_内所有字典_条目原式_可能的默认形态 = any,
        范_该总机_内所有字典_条目视式_各色形态之交集 extends 范_字典条目之视式_最简式 = 范_字典条目之视式_最简式<any>,
    > = {
        该字典群之称谓: string;

        所持: {
            字典机群: {
                其列表: 范_诸字典机_其列表<
                    范_该总机_This,
                    any,
                    范_该总机_内所有字典_条目视式_各色形态之交集
                >;

                其哈希表: 范_诸字典机_其哈希表<
                    范_该总机_This,
                    any,
                    范_该总机_内所有字典_条目视式_各色形态之交集
                >;
            };
        };

        态: {
            当下仍有字典机在构建数据: boolean,
            期待_迄今所有批次的字典机之数据重建任务均已完成: Promise<void>;
        };

        为: {
            追加一批字典: <
                范_该批字典_条目原式_可能的默认形态 = 范_该总机_内所有字典_条目原式_可能的默认形态
            >(
                一批字典机之形制要求总集之列表?: Array<
                    范_字典机_形制要求总集_准用式<
                        范_该总机_This,
                        范_该批字典_条目原式_可能的默认形态,
                        范_该总机_内所有字典_条目视式_各色形态之交集
                    >
                >
            ) => void;

            删除一批字典: (
                欲删除之诸字典之唯一标识之列表?: 范_字典_唯一标识[]
            ) => void;

            取某字典机: <
                范_该字典_条目原式 = 范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该字典_条目视式 extends 范_该总机_内所有字典_条目视式_各色形态之交集 = 范_该总机_内所有字典_条目视式_各色形态之交集
            >(
                欲索取之字典_其唯一标识?: 范_字典_唯一标识
            ) => (null | 范_字典机<范_该总机_This, 范_该字典_条目原式, 范_该字典_条目视式>);

            取某字典诸条目之视式_其列表: <
                范_该字典_条目原式 = 范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该字典_条目视式 extends 范_该总机_内所有字典_条目视式_各色形态之交集 = 范_该总机_内所有字典_条目视式_各色形态之交集
            >(
                所涉字典_其唯一标识?: 范_字典_唯一标识
            ) => 范_字典诸条目之视式_其列表<范_该字典_条目视式>;

            取某字典诸条目之视式_其哈希表: <
                范_该字典_条目原式 = 范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该字典_条目视式 extends 范_该总机_内所有字典_条目视式_各色形态之交集 = 范_该总机_内所有字典_条目视式_各色形态之交集
            >(
                所涉字典_其唯一标识?: 范_字典_唯一标识
            ) => 范_字典诸条目之视式_其哈希表<范_该字典_条目视式>;

            令所有字典按需重建数据: (
                本次执行须筛选参与之诸字典时应采取哪种筛选方案?: 范_字典群之总机_成批重建字典数据之方案
            ) => Promise<void>;
        };

        应对:
            范_字典群之总机_范之零件_诸事之应对_完备式<
                范_该总机_This,
                范_该总机_内所有字典_条目原式_可能的默认形态,
                范_该总机_内所有字典_条目视式_各色形态之交集
            >;
    };

}
